<!DOCTYPE idea-plugin PUBLIC "Plugin/DTD" "http://plugins.intellij.net/plugin.dtd">
<idea-plugin url="http://github.com/orfjackal/idea-sbt-plugin">

    <id>${plugin.id}</id>
    <name>${plugin.name}</name>
    <version>${project.version}</version>
    <idea-version since-build="103.255"/>
    <category>Build</category>

    <vendor url="http://www.orfjackal.net">Esko Luontola</vendor>

    <description><![CDATA[
        Integrates with Simple Build Tool (SBT) to enable building Scala projects easily and quickly.

        <ol>
            <dt><b>Quick Start</b></dt>
            <li>Create IDEA Project files from SBT build (see below)</li>
            <li>Check that "Settings / SBT" has the right "sbt-launch.jar" file configured</li>
            <li>Open the SBT Console Tool Window, manually enter SBT commands</li>
            <li>Go to the "Before launch" options of a Run Configuration (including the Default Run Configuration),
                uncheck "Make" and choose "Run SBT Action / test-compile"
            </li>
            <li>Now when you run it, the project will be compiled using SBT</li>
        </ol>
        <ol>
            <dt><b>Hints</b></dt>
            <li>Compatible with SBT 0.7.x and SBT 0.10.x, just choose the suitable launcher jar</li>
            <li>You can run multiple actions as a pre-run step, e.g. ";test-compile;jetty-run"</li>
            <li>For SBT 0.10.x, use either "exported-products" or "test:exported-products" as the pre-run step. This compiles sources and copies resources.</li>
        </ol>

        <ol>
            <dt><b>Creating/Updating IDEA project files (SBT 0.10.x)</b></dt>
            <li>(One time) Install sbt-idea from the <a href="https://github.com/harrah/xsbt/wiki/sbt-0.10-plugins-list">SBT
                0.10.x Plugins Page</a>
                as an SBT Plugin.
            </li>
            <li>From a terminal, run <code>sbt "gen-idea"</code></li>
            <li>This creates a .idea and .idea_modules folder with project configuration. Open the project with IDEA.</li>
            <li>After each change to your dependencies, run <code>sbt "gen-idea"</code> and when prompted reload the project</li>
        </ol>

        <ol>
            <dt><b>Creating/Updating IDEA project files (SBT 0.7.x)</b></dt>
            <li>(One time) Install <a href="https://github.com/mpeltonen/sbt-idea">sbt-idea</a> as an SBT Processor.</li>
            <li>From a terminal, run <code>sbt "idea"</code></li>
            <li>This creates a .idea folder with project configuration. Open the project with IDEA.</li>
            <li>After each change to your dependencies, run <code>sbt update idea</code> and when prompted reload the project</li>
        </ol>

    ]]></description>
    <change-notes><![CDATA[
        <ul>

        <dt><b>1.2.0 (2011-04-21)</b></dt>
        <li>Fails the build if there is an error in running an action (thanks Jason Zaugg)</li>
        <li>More toolbar buttons in SBT Console (thanks Jason Zaugg)</li>
        <li>Colors in SBT console output (thanks Jason Zaugg)</li>
        <li>Some bug fixes (thanks Jason Zaugg)</li>

        <dt><b>1.1.0 (2010-12-02)</b></dt>
        <li>Links from SBT error messages to the editor (thanks Ismael Juma)</li>
        <li>An always available SBT Console tool window (thanks Ismael Juma)</li>
        <li>VM parameters for SBT can be changed from the plugin settings (thanks Jason Zaugg)</li>

        <dt><b>1.0.0 (2010-06-17)</b></dt>
        <li>Runs SBT commands as "Before launch" tasks in run configurations</li>
        <li>Runs SBT commands which are entered manually to the SBT messages window</li>
        <li>Configures module compiler output directories automatically</li>

        </ul>
    ]]></change-notes>

    <extensions defaultExtensionNs="com.intellij">
        <stepsBeforeRunProvider implementation="net.orfjackal.sbt.plugin.SbtBeforeRunTaskProvider"/>
        <projectConfigurable implementation="net.orfjackal.sbt.plugin.settings.SbtConfigurable" order="last"/>
        <toolWindow id="SBT Console" anchor="bottom" factoryClass="net.orfjackal.sbt.plugin.SbtToolWindowFactory"/>
    </extensions>

    <project-components>
        <component>
            <implementation-class>net.orfjackal.sbt.plugin.SbtRunnerComponent</implementation-class>
        </component>
        <component>
            <implementation-class>net.orfjackal.sbt.plugin.settings.SbtProjectSettingsComponent</implementation-class>
        </component>
    </project-components>

    <application-components>
        <component>
            <implementation-class>net.orfjackal.sbt.plugin.settings.SbtApplicationSettingsComponent</implementation-class>
        </component>
    </application-components>

</idea-plugin>
